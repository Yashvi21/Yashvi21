# Generated by Django 4.2.7 on 2025-08-01 18:57

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('document_type', models.CharField(choices=[('legal_notice', 'Legal Notice'), ('contract', 'Contract'), ('court_order', 'Court Order'), ('complaint', 'Complaint'), ('affidavit', 'Affidavit'), ('agreement', 'Agreement'), ('lease_deed', 'Lease Deed'), ('property_document', 'Property Document'), ('identity_proof', 'Identity Proof'), ('income_proof', 'Income Proof'), ('medical_report', 'Medical Report'), ('police_report', 'Police Report'), ('other', 'Other')], default='other', max_length=20)),
                ('file', cloudinary.models.CloudinaryField(max_length=255, verbose_name='raw')),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(max_length=10)),
                ('privacy_level', models.CharField(choices=[('private', 'Private'), ('shared_with_lawyer', 'Shared with Lawyer'), ('public', 'Public')], default='private', max_length=20)),
                ('is_analyzed', models.BooleanField(default=False)),
                ('ai_summary', models.TextField(blank=True, null=True)),
                ('ai_extracted_text', models.TextField(blank=True, null=True)),
                ('ai_key_points', models.JSONField(blank=True, default=list)),
                ('ai_legal_issues', models.JSONField(blank=True, default=list)),
                ('ai_confidence_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shared_with_lawyers', models.ManyToManyField(blank=True, related_name='shared_documents', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='documents.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extracted_text', models.TextField()),
                ('word_count', models.PositiveIntegerField(default=0)),
                ('language_detected', models.CharField(default='en', max_length=10)),
                ('legal_category', models.CharField(blank=True, max_length=100, null=True)),
                ('key_clauses', models.JSONField(default=list)),
                ('potential_issues', models.JSONField(default=list)),
                ('missing_elements', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('parties_involved', models.JSONField(default=list)),
                ('important_dates', models.JSONField(default=list)),
                ('monetary_amounts', models.JSONField(default=list)),
                ('legal_references', models.JSONField(default=list)),
                ('risk_level', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=10, null=True)),
                ('risk_factors', models.JSONField(default=list)),
                ('processing_time', models.FloatField()),
                ('ai_model_used', models.CharField(max_length=50)),
                ('confidence_score', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='documents.document')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_level', models.CharField(choices=[('view', 'View Only'), ('comment', 'View and Comment'), ('edit', 'View and Edit')], default='view', max_length=10)),
                ('message', models.TextField(blank=True, null=True)),
                ('is_revoked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='documents.document')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_documents_by', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_documents_with', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('document', 'shared_with')},
            },
        ),
    ]
